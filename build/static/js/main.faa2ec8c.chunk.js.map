{"version":3,"sources":["configs/env.config.js","utils/storage.js","api/helper.js","api/auth.api.js","provider/auth-provider.js","provider/data-provider.js","ra-components/empty/index.js","utils/resource-seletector.js","components/families/list.js","components/families/create.js","components/families/edit.js","api/families.api.js","components/people/list.js","ra-components/input/SexInput.js","components/people/form.js","components/people/create.js","components/people/edit.js","api/persons.api.js","components/tree/index.js","ra-components/menu/index.js","App.js","serviceWorker.js","index.js"],"names":["loadAccessToken","localStorage","getItem","removeAccessToken","removeItem","removeAdminName","accessToken","getUrl","urlPath","Config","getAccessToken","buildGetQuery","params","query_array","Object","keys","query","i","length","key","push","encodeURIComponent","join","authenticatedGet","extraPath","a","Accept","requestInit","method","headers","url","console","log","fetchToCurl","fetch","res","handleResponse","unauthenticatedPost","jsonStringifyParams","body","JSON","stringify","isProduction","json","resJson","status","rejectError","Error","error_message","Array","message","login","email","password","username","data","value","access_token","setItem","name","Promise","resolve","reject","logout","checkError","checkAuth","getPermissions","apiUrl","configs","httpClient","options","Headers","fetchUtils","fetchJson","getList","resource","pagination","page","perPage","sort","sort_field","field","sort_direction","order","page_size","filter","then","total","parseInt","get","split","pop","getOne","id","getMany","ids","getManyReference","range","target","update","updateMany","create","delete","deleteMany","Empty","props","useListContext","basePath","Box","textAlign","m","Typography","variant","paragraph","title","subtitle","CreateButton","label","buttonLabel","get_data_of","state","part","resources","admin","undefined","get_resource","fetchedAt","values","ListActions","className","filters","exporter","rest","maxResults","displayedFilters","filterValues","showFilter","TopToolbar","sanitizeListRestProps","cloneElement","context","FamilyList","families","useSelector","useState","renderRedirect","setRenderedRedirect","useEffect","stopRender","to","List","bulkActionButtons","empty","actions","Datagrid","rowClick","TextField","source","EditButton","FamilyCreate","Create","SimpleForm","TextInput","validate","required","FamilyEdit","Edit","get_families_api","currentSort","hasCreate","selectedIds","PeopleList","readyToShowList","setReadyToShowList","shouldRedirectToFamily","setShouldRedirectToFamily","persons","check_if_has_family_already","familiesRes","DeleteButton","SexInput","useInput","input","meta","touched","error","Select","MenuItem","Form","initialValue","SelectInput","choices","NumberInput","max","min","FormDataConsumer","formData","is_alive","ReferenceInput","reference","allowEmpty","optionText","PeopleCreate","PeopleEdit","get_tree_from_root","get_tree_from_person","person_id","fetchTree","serverData2TreeDataOfOnePerson","person","treePerson","full_name","attributes","spouse","Vá»£","children","forEach","serverData","updateChildOfOnePerson","depthLevel","childrenString","serverDataString","findString","replaceString","newServerData","parse","replace","OrgChartTree","treeData","setTreeData","selectedPerson","setSelectedPerson","__rd3t","depth","task","style","width","height","orientation","nodeSize","x","y","translate","pathFunc","enableLegacyTransitions","onNodeClick","event","withRouter","onMenuClick","isXSmall","useMediaQuery","theme","breakpoints","down","open","ui","sidebarOpen","getResources","map","MenuItemLink","primaryText","leftIcon","createElement","icon","onClick","sidebarIsOpen","messages","vi","vietnameseMessages","App","polyglotI18nProvider","locale","Admin","menu","Menu","authProvider","dataProvider","customRoutes","path","component","Tree","Resource","InfoIcon","list","ListFamilies","edit","EditFamily","CreateFamily","BookIcon","ListPeople","EditPeople","CreatePeople","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.faa2ec8c.chunk.js","sourcesContent":["export default {\n  API_BASE: 'http://localhost:4001',\n  API_BASE_FULL: 'http://localhost:4001/admin/v1',\n  IS_PRODUCTION: 1\n}\n","export const loadAccessToken =  () => localStorage.getItem('X-ACCESS-TOKEN')\nexport const setAccessToken =  (value) => localStorage.setItem('X-ACCESS-TOKEN', value)\nexport const removeAccessToken = () =>  localStorage.removeItem('X-ACCESS-TOKEN')\n\nexport const setAdminName =  () => localStorage.getItem('X-ADMIN-NAME')\nexport const getAdminName =  (value) => localStorage.setItem('X-ADMIN-NAME', value)\nexport const removeAdminName = () =>  localStorage.removeItem('X-ADMIN-NAME')\n","import fetchToCurl from 'fetch-to-curl'\nimport Config from '../configs/env.config'\nimport { loadAccessToken } from '../utils/storage'\n\nconst showRequestAndResponse = true\nvar accessToken = ''\n\nconst getUrl = (urlPath) => {\n  return urlPath ? `${Config.API_BASE}${urlPath}` : Config.API_BASE\n}\n\nexport const getAccessToken = () => {\n  if (accessToken) return accessToken\n  accessToken = loadAccessToken()\n  return accessToken\n}\n\nexport const setAccessToken = (token) => {\n  accessToken = token\n}\n\nexport const buildGetQuery = (params) => {\n  const query_array = Object.keys(params)\n  let query = []\n  for (let i = 0; i < query_array.length; i++) {\n    const key = query_array[i]\n    if (params[key])\n      query.push(\n        encodeURIComponent(key) + '=' + encodeURIComponent(params[key])\n      )\n  }\n  return query.length ? query.join('&') : ''\n}\n\nexport const authenticatedPost = async (\n  urlPath,\n  params,\n  jsonStringifyParams\n) => {\n  const requestInit = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'x-access-token': await getAccessToken()\n    },\n    // @ts-ignore\n    body: jsonStringifyParams ? JSON.stringify(params) : params\n  }\n  const url = getUrl(urlPath)\n  showRequestAndResponse &&\n    console.log('request curl: ', fetchToCurl(url, requestInit))\n  const res = await fetch(url, requestInit)\n  return await handleResponse(res, url, requestInit)\n}\nexport const unauthenticatedGet = async (urlPath, external) => {\n  const requestInit = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }\n  const url = external ? urlPath : getUrl(urlPath)\n  const res = await fetch(url, requestInit)\n  return await handleResponse(res, url, requestInit)\n}\nexport const authenticatedPut = async (\n  urlPath,\n  params,\n  jsonStringifyParams\n) => {\n  const requestInit = {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'x-access-token': await getAccessToken()\n    },\n    // @ts-ignore\n    body: jsonStringifyParams ? JSON.stringify(params) : params\n  }\n  const url = getUrl(urlPath)\n  showRequestAndResponse &&\n    console.log('request curl: ', fetchToCurl(url, requestInit))\n  const res = await fetch(url, requestInit)\n  return await handleResponse(res, url, requestInit)\n}\nexport const authenticatedGet = async (urlPath, params, extraPath) => {\n  const requestInit = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'x-access-token': await getAccessToken()\n    }\n  }\n  const query = params ? buildGetQuery(params) : null\n  const url = `${getUrl(urlPath)}?${query ? query : ''}${\n    extraPath ? extraPath : ''\n  }`\n  showRequestAndResponse &&\n    console.log('request curl: ', fetchToCurl(url, requestInit))\n  const res = await fetch(url, requestInit)\n  return await handleResponse(res, url, requestInit)\n}\nexport const authenticatedDelete = async (\n  urlPath,\n  params,\n  jsonStringifyParams\n) => {\n  const requestInit = {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'x-access-token': await getAccessToken()\n    },\n    // @ts-ignore\n    body: jsonStringifyParams ? JSON.stringify(params) : params\n  }\n  const url = getUrl(urlPath)\n  showRequestAndResponse &&\n    console.log('request curl: ', fetchToCurl(url, requestInit))\n  const res = await fetch(url, requestInit)\n  return await handleResponse(res, url, requestInit)\n}\n// using fetch atm, we might consider using axios\nexport const unauthenticatedPost = async (\n  urlPath,\n  params,\n  jsonStringifyParams\n) => {\n  const requestInit = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    // @ts-ignore\n    body: jsonStringifyParams ? JSON.stringify(params) : params\n  }\n  const url = getUrl(urlPath)\n  showRequestAndResponse &&\n    console.log('request curl: ', fetchToCurl(url, requestInit))\n  const res = await fetch(url, requestInit)\n  return await handleResponse(res, url, requestInit)\n}\nconst handleResponse = async (res, url, params) => {\n  const isProduction = Config.IS_PRODUCTION == '1'\n  const resJson = await res.json()\n  if (res.status >= 400) {\n    const rejectError = new Error()\n    if (typeof resJson.error_message !== 'string') {\n      showRequestAndResponse && console.log('API Response: ', resJson)\n      if (resJson.error_message instanceof Array) {\n        const status = isProduction\n          ? '' // not show for production\n          : '. Status: ' + res.status\n        rejectError.message = resJson.error_message.join(', ') + status\n      } else {\n        rejectError.message = isProduction\n          ? `Unexpected Error \\nOps, we encountered an unexpected error. Please try again or contact us! `\n          : ' server error with detail ' + JSON.stringify(res) // undefined or something even more weird...\n      }\n    } else {\n      rejectError.message = resJson.error_message\n    }\n    // @ts-ignore\n    rejectError.status = res.status\n    throw rejectError\n  }\n  return resJson\n}\nexport const authenticatedPostMultipart = async (urlPath, params) => {\n  let options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'multipart/form-data',\n      'x-access-token': await getAccessToken()\n    }\n  }\n  options.body = new FormData()\n  for (let name in params) {\n    options.body.append(name, params[name])\n  }\n  const url = getUrl(urlPath)\n  showRequestAndResponse &&\n    console.log('request curl: ', fetchToCurl(url, options))\n  const res = await fetch(url, options)\n  return await handleResponse(res, url, {})\n}\nexport const authenticatedPutMultipart = async (urlPath, params) => {\n  let options = {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'multipart/form-data',\n      'x-access-token': await getAccessToken()\n    }\n  }\n  options.body = new FormData()\n  for (let name in params) {\n    options.body.append(name, params[name])\n  }\n  const url = getUrl(urlPath)\n  showRequestAndResponse &&\n    console.log('request curl: ', fetchToCurl(url, options))\n  const res = await fetch(url, options)\n  return await handleResponse(res, url, {})\n}\n","import { unauthenticatedPost } from './helper'\n\nexport const login = async ({ email, password}) =>  {\n  return await unauthenticatedPost('/admin/public/login', {\n    email, password\n  }, true)\n}\n","import { login } from '../api/auth.api'\nimport {\n  setAccessToken,\n  setAdminName,\n  loadAccessToken,\n  removeAccessToken,\n  removeAdminName\n} from '../utils/storage'\n\nexport default {\n  // called when the user attempts to log in\n  login: async ({ username, password }) => {\n    try {\n      const { data } = await login({ email: username, password: password })\n\n      setAccessToken(data.access_token)\n      setAdminName(data.name)\n      return Promise.resolve()\n    } catch (error) {\n      return Promise.reject(error)\n    }\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    removeAccessToken()\n    removeAdminName()\n    return Promise.resolve()\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      removeAccessToken()\n      removeAdminName()\n      return Promise.reject()\n    }\n    return Promise.resolve()\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    return loadAccessToken() ? Promise.resolve() : Promise.reject()\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve()\n}\n","import simpleRestProvider from 'ra-data-simple-rest'\nimport { fetchUtils } from 'react-admin'\nimport { stringify } from 'query-string'\nimport { getAccessToken } from '../api/helper'\nimport configs from '../configs/env.config'\n\nconst fetchJson = (url, options = {}) => {\n  options.headers = new Headers({\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'x-access-token': getAccessToken()\n  })\n  return fetchUtils.fetchJson(url, options)\n}\n\n// const dataProvider = simpleRestProvider(configs.API_BASE_FULL, fetchJson);\nconst apiUrl = configs.API_BASE_FULL\nconst httpClient = fetchJson\n\nexport default {\n  getList: (resource, params) => {\n    const { page, perPage } = params.pagination\n    const { field, order } = params.sort\n    const query = {\n      sort_field: field,\n      sort_direction: order,\n      page: page,\n      page_size: perPage,\n      filter: JSON.stringify(params.filter)\n    }\n    const url = `${apiUrl}/${resource}?${stringify(query)}`\n\n    return httpClient(url).then(({ headers, json }) => {\n      return {\n        data: json ? json.data : [],\n        total: parseInt(headers.get('content-range').split('/').pop(), 10)\n      }\n    })\n  },\n\n  getOne: (resource, params) =>\n    httpClient(`${apiUrl}/${resource}/${params.id}`).then(({ json }) => {\n      return {\n        data: json.data\n      }\n    }),\n\n  getMany: (resource, params) => {\n    const query = {\n      filter: JSON.stringify({ id: params.ids })\n    }\n    const url = `${apiUrl}/${resource}?${stringify(query)}`\n    return httpClient(url).then(({ json }) => ({ data: json }))\n  },\n\n  getManyReference: (resource, params) => {\n    const { page, perPage } = params.pagination\n    const { field, order } = params.sort\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify({\n        ...params.filter,\n        [params.target]: params.id\n      })\n    }\n    const url = `${apiUrl}/${resource}?${stringify(query)}`\n\n    return httpClient(url).then(({ headers, json }) => ({\n      data: json,\n      total: parseInt(headers.get('content-range').split('/').pop(), 10)\n    }))\n  },\n\n  update: (resource, params) =>\n    httpClient(`${apiUrl}/${resource}/${params.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({ data: json })),\n\n  updateMany: (resource, params) => {\n    const query = {\n      filter: JSON.stringify({ id: params.ids })\n    }\n    return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\n      method: 'PUT',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({ data: json }))\n  },\n\n  create: (resource, params) =>\n    httpClient(`${apiUrl}/${resource}`, {\n      method: 'POST',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({\n      data: { ...params.data, id: json.id }\n    })),\n\n  delete: (resource, params) =>\n    httpClient(`${apiUrl}/${resource}/${params.id}`, {\n      method: 'DELETE'\n    }).then(({ json }) => ({ data: json })),\n\n  deleteMany: (resource, params) => {\n    const query = {\n      filter: JSON.stringify({ id: params.ids })\n    }\n    return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\n      method: 'DELETE',\n      body: JSON.stringify(params.data)\n    }).then(({ json }) => ({ data: json }))\n  }\n}\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { CreateButton, List, useListContext } from 'react-admin'\n\nconst Empty = (props) => {\n  const { basePath, resource } = useListContext()\n  return (\n    <Box textAlign=\"center\" m={1}>\n      <Typography variant=\"h4\" paragraph>\n        {props.title}\n      </Typography>\n      <Typography variant=\"body1\">{props.subtitle}</Typography>\n      <CreateButton label={props.buttonLabel} basePath={basePath} />\n    </Box>\n  )\n}\n\nexport default Empty\n","export const get_resource = (state) =>\n  state && state.admin && state.admin.resources\n    ? state.admin.resources\n    : undefined\n\nexport const get_data_of = (state, part) => {\n  const resources = get_resource(state)\n  const data =\n    resources && resources[part]\n      ? {\n          ...resources[part].data\n        }\n      : undefined\n  if (data) {\n    delete data.undefined\n    delete data.fetchedAt\n  }\n  return Object.values(data)\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { List, Datagrid, TextField } from 'react-admin'\nimport Empty from '../../ra-components/empty'\nimport { cloneElement } from 'react'\nimport { Redirect } from 'react-router'\nimport { useSelector } from 'react-redux'\nimport { get_data_of } from '../../utils/resource-seletector'\nimport {\n  useListContext,\n  TopToolbar,\n  CreateButton,\n  EditButton,\n  DeleteButton,\n  sanitizeListRestProps\n} from 'react-admin'\n\nconst ListActions = (props) => {\n  const { className, exporter, filters, maxResults, ...rest } = props\n  const {\n    data,\n    resource,\n    displayedFilters,\n    filterValues,\n    basePath,\n    showFilter,\n    total\n  } = useListContext()\n\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button'\n        })}\n      {total < 1 ? (\n        <CreateButton label=\"ThÃªm dÃ²ng há»\" basePath={basePath} />\n      ) : null}\n    </TopToolbar>\n  )\n}\n\nconst FamilyList = (props) => {\n  const families = useSelector((state) => get_data_of(state, 'families')) || []\n  const [renderRedirect, setRenderedRedirect] = useState(false)\n  useEffect(() => {\n    if (families.length) setRenderedRedirect(true)\n    return () => {}\n  }, [families.length])\n  if (renderRedirect)\n    return (\n      <Redirect\n        stopRender={!renderRedirect}\n        to={`/families/${families[0].id}`}\n      />\n    )\n  return (\n    <>\n      <br />\n      <br />\n      <List\n        bulkActionButtons={false}\n        {...props}\n        empty={\n          <Empty\n            title=\"Báº¡n chÆ°a táº¡o dÃ²ng há»\"\n            subtitle=\"Báº¯t Äáº§u ngay báº±ng cÃ¡ch báº¥m nÃºt 'ThÃªm' dÆ°á»i ÄÃ¢y\"\n            buttonLabel=\"ThÃªm\"\n          />\n        }\n        title=\"Danh sÃ¡ch dÃ²ng há»\"\n        actions={<ListActions />}\n      >\n        <Datagrid rowClick=\"edit\">\n          <TextField source=\"id\" />\n          <TextField source=\"name\" label=\"TÃªn dÃ²ng há»\" />\n          <TextField source=\"main_address\" label=\"Äá»a chá»\" />\n          <EditButton />\n        </Datagrid>\n      </List>\n    </>\n  )\n}\n\nexport default FamilyList\n","import * as React from 'react'\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  TextInput,\n  DateInput,\n  ReferenceManyField,\n  Datagrid,\n  TextField,\n  DateField,\n  EditButton,\n  required\n} from 'react-admin'\nimport RichTextInput from 'ra-input-rich-text'\n\nconst FamilyCreate = (props) => (\n  <Create {...props} title=\"Táº¡o dÃ²ng há»\">\n    <SimpleForm>\n      <TextInput\n        source=\"name\"\n        validate={required()}\n        label=\"Nháº­p tÃªn dÃ²ng há» vÃ o ÄÃ¢y...\"\n      />\n      <TextInput\n        source=\"main_address\"\n        validate={required()}\n        label=\"Nháº­p Äá»a chá» dÃ²ng há» vÃ o ÄÃ¢y...\"\n      />\n      <RichTextInput\n        source=\"description\"\n        label=\"Nháº­p thÃªm thÃ´ng tin ghi chÃº á» phÃ­a dÆ°á»i:\"\n      />\n    </SimpleForm>\n  </Create>\n)\n\nexport default FamilyCreate\n","import * as React from 'react'\nimport {\n  Create,\n  Edit,\n  SimpleForm,\n  TextInput,\n  DateInput,\n  ReferenceManyField,\n  Datagrid,\n  TextField,\n  DateField,\n  EditButton,\n  required\n} from 'react-admin'\nimport RichTextInput from 'ra-input-rich-text'\n\nconst FamilyEdit = (props) => (\n  <Edit title=\"Xem vÃ  sá»­a thÃ´ng tin dÃ²ng há»\" {...props}>\n    <SimpleForm>\n      <TextInput\n        source=\"name\"\n        validate={required()}\n        label=\"Nháº­p tÃªn dÃ²ng há» vÃ o ÄÃ¢y...\"\n      />\n      <TextInput\n        source=\"main_address\"\n        validate={required()}\n        label=\"Nháº­p Äá»a chá» dÃ²ng há» vÃ o ÄÃ¢y...\"\n      />\n      <RichTextInput\n        source=\"description\"\n        label=\"Nháº­p thÃªm thÃ´ng tin ghi chÃº á» phÃ­a dÆ°á»i:\"\n      />\n    </SimpleForm>\n  </Edit>\n)\n\nexport default FamilyEdit\n","import { authenticatedGet } from './helper'\n\nexport const get_families_api = async () => {\n  return await authenticatedGet('/admin/v1/families')\n}\n","import React, { useEffect, useState } from 'react'\nimport { List, Datagrid, TextField } from 'react-admin'\nimport { cloneElement } from 'react'\nimport {\n  useListContext,\n  TopToolbar,\n  CreateButton,\n  EditButton,\n  DeleteButton,\n  sanitizeListRestProps\n} from 'react-admin'\nimport { Redirect } from 'react-router'\nimport { useSelector } from 'react-redux'\nimport Empty from '../../ra-components/empty'\nimport { get_data_of } from '../../utils/resource-seletector'\nimport { get_families_api } from '../../api/families.api'\n\nconst ListActions = (props) => {\n  const { className, exporter, filters, maxResults, ...rest } = props\n  const {\n    currentSort,\n    resource,\n    displayedFilters,\n    filterValues,\n    hasCreate,\n    basePath,\n    selectedIds,\n    showFilter,\n    total\n  } = useListContext()\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button'\n        })}\n      <CreateButton label=\"ThÃªm ngÆ°á»i\" basePath={basePath} />\n    </TopToolbar>\n  )\n}\n\nconst PeopleList = (props) => {\n  const [readyToShowList, setReadyToShowList] = useState(false)\n  const [shouldRedirectToFamily, setShouldRedirectToFamily] = useState(false)\n  const families = useSelector((state) => get_data_of(state, 'families')) || []\n  const persons = useSelector((state) => get_data_of(state, 'persons')) || []\n  useEffect(() => {\n    const check_if_has_family_already = async () => {\n      console.log('check_if_has_family_already')\n      try {\n        const familiesRes = await get_families_api()\n        if (familiesRes && familiesRes.data && familiesRes.data.length > 0)\n          setReadyToShowList(true)\n        else setShouldRedirectToFamily(true)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    check_if_has_family_already()\n    if (!families.length) check_if_has_family_already()\n    else setReadyToShowList(true)\n    return () => {}\n  }, [families.length])\n  return readyToShowList ? (\n    <>\n      {persons.length ? (\n        <>\n          <br />\n          <br />\n          <p>ÄÃ¢y lÃ  danh sÃ¡ch táº¥t cáº£ má»i ngÆ°á»i trong dÃ²ng há»</p>\n          <p>Báº¡n cÃ³ thá» thÃªm, sá»­a, vÃ  xÃ³a thÃ´ng tin cá»§a báº¥t ká»³ ai.</p>\n        </>\n      ) : null}\n      <List\n        bulkActionButtons={false}\n        {...props}\n        empty={\n          <Empty\n            title=\"Báº¡n chÆ°a thÃªm ngÆ°á»i vÃ o dÃ²ng há»\"\n            subtitle=\"Báº¯t Äáº§u ngay báº±ng cÃ¡ch báº¥m nÃºt 'ThÃªm' dÆ°á»i ÄÃ¢y\"\n            buttonLabel=\"ThÃªm\"\n          />\n        }\n        title=\"Táº¥t cáº£ má»i ngÆ°á»i trong dÃ²ng há»\"\n        actions={<ListActions />}\n      >\n        <Datagrid rowClick=\"edit\">\n          <TextField source=\"id\" />\n          <TextField source=\"full_name\" label=\"TÃªn\" />\n          <TextField source=\"nickname\" label=\"TÃªn khÃ¡c\" />\n          <TextField source=\"dob_year\" label=\"Sinh nÄm\" />\n          <TextField source=\"family_level\" label=\"Äá»i thá»©\" />\n          <EditButton label=\"Sá»­a\" />\n          <DeleteButton label=\"XÃ³a\" />\n        </Datagrid>\n      </List>\n    </>\n  ) : shouldRedirectToFamily ? (\n    <Redirect to=\"/families\" />\n  ) : null\n}\n\nexport default PeopleList\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport { SelectInput } from 'react-admin';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useInput } from 'react-admin';\n\nconst SexInput = props => {\n    const {\n        input,\n        meta: { touched, error }\n    } = useInput(props);\n\n    return (\n      <>\n        <span>{props.label}:  </span><Select\n            label=\"Giá»i tÃ­nh\"\n            {...input}\n        >\n            <MenuItem value=\"male\">Nam giá»i</MenuItem>\n            <MenuItem value=\"female\">Ná»¯ giá»i</MenuItem>\n        </Select>\n        </>\n    );\n};\nexport default SexInput;\n","import * as React from 'react'\nimport {\n  FormDataConsumer,\n  Create,\n  Edit,\n  BooleanInput,\n  SelectInput,\n  SimpleForm,\n  TextInput,\n  NumberInput,\n  ReferenceInput,\n  ReferenceArrayInput,\n  SelectArrayInput,\n  NullableBooleanInput,\n  DateInput,\n  ReferenceManyField,\n  Datagrid,\n  TextField,\n  DateField,\n  EditButton,\n  required\n} from 'react-admin'\nimport RichTextInput from 'ra-input-rich-text'\nimport SexInput from '../../ra-components/input/SexInput'\n\nconst Form = (props) => (\n  <SimpleForm {...props}>\n    {/* <ReferenceInput\n        label=\"Thuá»c dÃ²ng há»\"\n        source=\"family_id\"\n        reference=\"families\"\n      >\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput> */}\n    <TextInput source=\"full_name\" validate={required()} label=\"TÃªn Äáº§y Äá»§...\" />\n    <br />\n    <TextInput source=\"nickname\" label=\"TÃªn khÃ¡c náº¿u cÃ³ (vÃ­ dá»¥ Cá» Ná»n) ...\" />\n    <br />\n    <SexInput initialValue=\"male\" label=\"Giá»i tÃ­nh\" source=\"gender\" />\n    <>\n      <br />\n      <p>\n        <span>NgÃ y sinh: </span>\n        <span>(khÃ´ng báº¯t buá»c)</span>\n      </p>\n\n      <SelectInput\n        source=\"dob_in_lunar\"\n        label=\"DÆ°Æ¡ng hay Ã¢m\"\n        initialValue={true}\n        choices={[\n          { id: true, name: 'Ãm lá»ch' },\n          { id: false, name: 'DÆ°Æ¡ng lá»ch' }\n        ]}\n      />\n      <NumberInput source=\"dob_date\" max={31} min={1} label=\"NgÃ y\" />\n      <NumberInput source=\"dob_month\" max={12} min={1} label=\"ThÃ¡ng\" />\n      <NumberInput source=\"dob_year\" label=\"NÄm\" />\n    </>\n\n    <SelectInput\n      source=\"is_alive\"\n      label=\"CÃ²n sá»ng hay ÄÃ£ máº¥t\"\n      initialValue={true}\n      choices={[\n        { id: true, name: 'CÃ²n sá»ng' },\n        { id: false, name: 'ÄÃ£ máº¥t' }\n      ]}\n    />\n    <FormDataConsumer>\n      {(formData, ...rest) => {\n        return !formData.formData.is_alive ? (\n          <>\n            <br />\n            <p>\n              <span>NgÃ y giá»: </span>\n              <span>(khÃ´ng báº¯t buá»c)</span>\n            </p>\n            <SelectInput\n              source=\"dod_in_lunar\"\n              label=\"DÆ°Æ¡ng hay Ã¢m\"\n              initialValue={true}\n              choices={[\n                { id: true, name: 'Ãm lá»ch' },\n                { id: false, name: 'DÆ°Æ¡ng lá»ch' }\n              ]}\n            />\n            <NumberInput source=\"dod_date\" max={31} min={1} label=\"NgÃ y\" />\n            <NumberInput source=\"dod_month\" max={12} min={1} label=\"ThÃ¡ng\" />\n            <NumberInput source=\"dod_year\" label=\"NÄm\" />\n            <br />\n          </>\n        ) : null\n      }}\n    </FormDataConsumer>\n    <br />\n    <span>Má»i quan há» gia ÄÃ¬nh:</span>\n    <span>(khÃ´ng báº¯t buá»c)</span>\n    <>\n      <ReferenceInput\n        label=\"Cha lÃ  Ã´ng\"\n        source=\"father_id\"\n        reference=\"persons\"\n        allowEmpty\n      >\n        <SelectInput optionText=\"full_name\" />\n      </ReferenceInput>\n      <ReferenceInput\n        label=\"Máº¹ lÃ  bÃ \"\n        source=\"mother_id\"\n        reference=\"persons\"\n        allowEmpty\n      >\n        <SelectInput optionText=\"full_name\" />\n      </ReferenceInput>\n    </>\n    <br />\n    <span>Vá»£ chá»ng: (khÃ´ng báº¯t buá»c)</span>\n    <ReferenceInput\n      label=\"Vá»£/Chá»ng lÃ :\"\n      source=\"spouse_id\"\n      reference=\"persons\"\n      allowEmpty\n    >\n      <SelectInput optionText=\"full_name\" />\n    </ReferenceInput>\n    <br />\n    <span>Con thá»© máº¥y trong nhÃ : (khÃ´ng báº¯t buá»c)</span>\n    <NumberInput\n      min={1}\n      source=\"sibling_level\"\n      label=\"Con Äáº§u ghi 1, con thá»© 2 ghi 2\"\n    />\n    <br />\n    <span>Nháº­p thÃªm thÃ´ng tin: (khÃ´ng báº¯t buá»c)</span>\n    <RichTextInput source=\"note\" label=\"(vÃ­ dá»¥: Tá» ráº¥t giá»i vÃ  giÃ u cÃ³) \" />\n  </SimpleForm>\n)\n\nexport default Form\n","import * as React from 'react'\nimport { Create } from 'react-admin'\nimport Form from './form'\n\nconst PeopleCreate = (props) => (\n  <Create {...props} title=\"ThÃªm ngÆ°á»i vÃ o dÃ²ng há»\">\n    <Form />\n  </Create>\n)\n\nexport default PeopleCreate\n","import * as React from 'react'\nimport { Edit } from 'react-admin'\nimport Form from './form'\n\nconst PeopleEdit = (props) => {\n  // console.log('PeopleEdit')\n  // console.log(props)\n  return (\n    <Edit {...props} title=\"Sá»­a thÃ´ng tin cá»§a ngÆ°á»i\">\n      <Form {...props} />\n    </Edit>\n  )\n}\n\nexport default PeopleEdit\n","import { authenticatedGet } from './helper'\n\nexport const get_tree_from_root = async () => {\n  return await authenticatedGet('/admin/v1/persons/tree')\n}\n\nexport const get_tree_from_person = async (person_id) => {\n  return await authenticatedGet('/admin/v1/persons/tree/from/' + person_id)\n}\n","import React, { useEffect, useState } from 'react'\nimport Tree from 'react-d3-tree'\nimport { get_tree_from_root, get_tree_from_person } from '../../api/persons.api'\n\nconst fetchTree = async (person_id) => {\n  try {\n    const res = !person_id\n      ? await get_tree_from_root()\n      : await get_tree_from_person(person_id)\n    console.log(res.data)\n    return res.data\n  } catch (error) {\n    console.log(error)\n    return null\n  }\n}\n\nconst serverData2TreeDataOfOnePerson = (person) => {\n  const treePerson = {\n    id: person.id,\n    name: person.full_name,\n    attributes: person.spouse && {\n      Vá»£: person.spouse.full_name\n    },\n    children: []\n  }\n  if (person.children)\n    Object.keys(person.children).forEach((key) => {\n      treePerson.children.push(\n        serverData2TreeDataOfOnePerson(person.children[key])\n      )\n    })\n  return treePerson\n}\n\nvar serverData = {}\n\nconst updateChildOfOnePerson = (depthLevel, person_id, children) => {\n  if (depthLevel === 1)\n    serverData.children[`child_${person_id}`].children = children\n  else {\n    const childrenString = JSON.stringify(children)\n    const serverDataString = JSON.stringify(serverData)\n    const findString = `\"child_${person_id}\":{`\n    const replaceString = findString + '\"children\":' + childrenString + ','\n\n    const newServerData = JSON.parse(\n      serverDataString.replace(findString, replaceString)\n    )\n    serverData = newServerData\n  }\n}\n\nexport default function OrgChartTree() {\n  const [treeData, setTreeData] = useState()\n  const [selectedPerson, setSelectedPerson] = useState()\n\n  useEffect(() => {\n    const task = async () => {\n      console.log('fetchTree...')\n      const data = await fetchTree(selectedPerson ? selectedPerson.id : null)\n      if (!selectedPerson) {\n        serverData = data\n        setTreeData(serverData2TreeDataOfOnePerson(serverData))\n      } else {\n        updateChildOfOnePerson(\n          selectedPerson.__rd3t.depth,\n          selectedPerson.id,\n          data.children\n        )\n\n        setTreeData(serverData2TreeDataOfOnePerson(serverData))\n      }\n    }\n    task()\n    return () => {}\n  }, [selectedPerson])\n\n  return (\n    <div id=\"treeWrapper\" style={{ width: '100%', height: '100%' }}>\n      {treeData ? (\n        <Tree\n          orientation=\"horizontal\"\n          nodeSize={{ x: 250, y: 100 }}\n          translate={{ x: 100, y: 200 }}\n          pathFunc=\"diagonal\"\n          enableLegacyTransitions={true}\n          onNodeClick={(event) => {\n            if (Object.keys(event.children).length) return\n            setSelectedPerson(event)\n          }}\n          data={treeData}\n        />\n      ) : null}\n    </div>\n  )\n}\n","// in src/Menu.js\nimport * as React from 'react'\nimport { createElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMediaQuery } from '@material-ui/core'\nimport { MenuItemLink, getResources } from 'react-admin'\nimport { withRouter } from 'react-router-dom'\nimport AccountTree from '@material-ui/icons/AccountTree'\n\nconst Menu = ({ onMenuClick, logout }) => {\n  const isXSmall = useMediaQuery((theme) => theme.breakpoints.down('xs'))\n  const open = useSelector((state) => state.admin.ui.sidebarOpen)\n  const resources = useSelector(getResources)\n  return (\n    <div>\n      {resources.map((resource) => (\n        <MenuItemLink\n          key={resource.name}\n          to={`/${resource.name}`}\n          primaryText={\n            (resource.options && resource.options.label) || resource.name\n          }\n          leftIcon={createElement(resource.icon)}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n      ))}\n      <MenuItemLink\n        to=\"/tree\"\n        primaryText=\"CÃ¢y gia pháº£\"\n        leftIcon={<AccountTree />}\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n      />\n      {isXSmall && logout}\n    </div>\n  )\n}\n\nexport default withRouter(Menu)\n","import React, { useState, useEffect } from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport { Route } from 'react-router-dom'\nimport vietnameseMessages from 'react-admin-vietnamese'\nimport polyglotI18nProvider from 'ra-i18n-polyglot'\n\nimport BookIcon from '@material-ui/icons/Book'\nimport UserIcon from '@material-ui/icons/People'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport authProvider from './provider/auth-provider'\nimport dataProvider from './provider/data-provider'\n\nimport ListFamilies from './components/families/list'\nimport CreateFamily from './components/families/create'\nimport EditFamily from './components/families/edit'\n\nimport ListPeople from './components/people/list'\nimport CreatePeople from './components/people/create'\nimport EditPeople from './components/people/edit'\n\nimport ListAppuser from './components/appuser/list'\nimport CreateAppuser from './components/appuser/create'\nimport EditAppuser from './components/appuser/edit'\n\nimport Tree from './components/tree'\n\nimport Menu from './ra-components/menu'\n\n// import ListEvents from './components/events/list'\n// import CreateEvent from './components/events/create'\n// import EditEvent from './components/events/edit'\n\nconst messages = {\n  vi: vietnameseMessages\n}\n\nconst i18nProvider = polyglotI18nProvider((locale) => messages[locale])\n\nconst App = () => {\n  return (\n    <Admin\n      // locale=\"vi\"\n      // i18nProvider={i18nProvider}\n      menu={Menu}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      customRoutes={[<Route path=\"/tree\" component={Tree} />]}\n    >\n      <Resource\n        name=\"families\"\n        options={{ label: 'ThÃ´ng tin dÃ²ng há»' }}\n        icon={InfoIcon}\n        list={ListFamilies}\n        edit={EditFamily}\n        create={CreateFamily}\n      />\n      <Resource\n        name=\"persons\"\n        options={{ label: 'Gia pháº£' }}\n        icon={BookIcon}\n        list={ListPeople}\n        edit={EditPeople}\n        create={CreatePeople}\n      />\n      {/* <Resource\n        name=\"events\"\n        icon={UserIcon}\n        options={{ label: 'Sá»± kiá»n' }}\n        list={ListEvents}\n        edit={EditEvent}\n        create={CreateEvent}\n      /> */}\n      {/* <Resource\n        name=\"appusers\"\n        icon={UserIcon}\n        options={{ label: 'NgÆ°á»i xem' }}\n        list={ListAppuser}\n        edit={EditAppuser}\n        create={CreateAppuser}\n      /> */}\n    </Admin>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}